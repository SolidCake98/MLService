"""create dataset_tables

Revision ID: 1cb3c0789e11
Revises: 22a5312f0781
Create Date: 2021-04-04 16:37:51.185575

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1cb3c0789e11'
down_revision = '22a5312f0781'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aggregation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data_type_aggregation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('aggregation_id', sa.Integer(), nullable=False),
    sa.Column('data_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['aggregation_id'], ['aggregation.id'], ),
    sa.ForeignKeyConstraint(['data_type_id'], ['data_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dataset_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('dataset_file', sa.String(length=1000), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('date_load', sa.DateTime(), nullable=True),
    sa.Column('date_changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dataset_column_source',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('tittle', sa.String(), nullable=True),
    sa.Column('dataset_table_id', sa.Integer(), nullable=False),
    sa.Column('data_type_aggregation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['data_type_aggregation_id'], ['data_type_aggregation.id'], ),
    sa.ForeignKeyConstraint(['dataset_table_id'], ['dataset_table.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dataset_column_versioned',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('tittle', sa.String(), nullable=True),
    sa.Column('dataset_column_source_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('data_type_aggregation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['data_type_aggregation_id'], ['data_type_aggregation.id'], ),
    sa.ForeignKeyConstraint(['dataset_column_source_id'], ['dataset_column_source.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('dataset_column_versioned')
    op.drop_table('dataset_column_source')
    op.drop_table('dataset_table')
    op.drop_table('data_type_aggregation')
    op.drop_table('data_type')
    op.drop_table('aggregation')
    # ### end Alembic commands ###
